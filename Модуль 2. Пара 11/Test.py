############### 1. Сумма чисел ##############################
# Напишите программу, которая запрашивает у пользователя число n и выводит сумму
# всех чисел от 1 до n.
# Пример ввода:
# 5
# Пример вывода:
# 15

# Запрашиваем ввод числа n у пользователя
n = int(input("Введите число n: "))

# Вычисляем сумму чисел от 1 до n
summa = sum(range(1, n + 1))

# Выводим результат
print(summa)


###############2. Чётные числа ###########################
# Напишите программу, которая запрашивает у пользователя число n и выводит
# все чётные числа от 1 до n.
# Пример ввода:
# 10
# Пример вывода:
# 2 4 6 8 10

# Запрашиваем ввод числа n у пользователя
n = int(input("Введите число n: "))

# Перебираем числа от 1 до n и проверяем их на четность
for i in range(1, n + 1):
    if i % 2 == 0:
        print(i, end=' ')


###############3. Факториал##############################
#Напишите программу, которая запрашивает у пользователя число n и вычисляет
# его факториал (произведение всех чисел от 1 до n).
#Пример ввода:
#5
#Пример вывода:
#120

# Запрашиваем ввод числа n у пользователя
n = int(input("Введите число n: "))

# Вычисляем факториал числа n
factorial = 1

for i in range(1, n + 1):
    factorial *= i

# Выводим результат
print(factorial)

#################4. Таблица умножения ################################
# Напишите программу, которая запрашивает у пользователя число n и выводит
# таблицу умножения для этого числа от 1 до 10.
# Пример ввода:
# 7
# Пример вывода:...
# 7 * 1 = 7
# 7 * 2 = 14
# ...
# 7 * 10 = 70

# Запрашиваем ввод числа n у пользователя
n = int(input("Введите число n: "))

# Формируем строки таблицы умножения
for i in range(1, 11):
    result = n * i
    print(f"{n} * {i} = {result}")

#####################5. Максимум из трёх чисел #################
# Напишите программу, которая запрашивает у пользователя три числа и
# выводит наибольшее из них.
# Пример ввода:
# 3 7 2
# Пример вывода:
# 7

# Запрашиваем ввод трех чисел у пользователя
a = float(input("Введите первое число: "))
b = float(input("Введите второе число: "))
c = float(input("Введите третье число: "))

# Определяем максимальное число
max_number = max(a, b, c)

# Выводим результат
print(max_number)

############### 6. Простые числа #########################
# Напишите программу, которая запрашивает у пользователя число n и
# проверяет, является ли оно простым.
# Пример ввода:
# 13
# Пример вывода:
# 13 - простое число

def is_prime(n):
    # Проверка на простоту числа
    if n <= 1:
        return False

    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False

    return True


# Запрашиваем ввод числа n у пользователя
n = int(input("Введите число n: "))

if is_prime(n):
    print(f"{n} - простое число")
else:
    print(f"{n} - составное число")

############################ 7. Сумма цифр числа #######################
# Напишите программу, которая запрашивает у пользователя число и выводит
# сумму его цифр.
# Пример ввода:
# 1234
# Пример вывода:
# 10

# Запрашиваем ввод числа у пользователя
number = input("Введите число: ")

# Преобразуем строку в список цифр и суммируем их
digit_sum = sum(int(digit) for digit in number)

# Выводим результат
print(digit_sum)

######################## 8. Перевёрнутое число ####################
# Напишите программу, которая запрашивает у пользователя число и выводит его в обратном порядке.
# Пример ввода:
# 12345
# Пример вывода:
# 54321

# Запрашиваем ввод числа у пользователя
number = input("Введите число: ")

# Переворачиваем число и выводим результат
reversed_number = number[::-1]
print(reversed_number)

################ 9. Количество цифр в числе #####################
# Напишите программу, которая запрашивает у пользователя число и
# выводит количество цифр в этом числе.
# Пример ввода:
# 12345
# Пример вывода:
# 5

# Запрашиваем ввод числа у пользователя
number = input("Введите число: ")

# Подсчитываем количество цифр в числе
digit_count = len(number)

# Выводим результат
print(digit_count)

###################### 10. Квадратная спираль ###################################
# Напишите программу, которая с помощью модуля turtle рисует квадратную спираль.

from turtle import *

speed(5)  # Устанавливаем скорость рисования

# Начальные параметры
side_length = 20  # Длина стороны первого квадрата
angle = 90  # Угол поворота между квадратами
iterations = 50  # Количество квадратов в спирали

for i in range(iterations):
    forward(side_length)
    right(angle)
    side_length += 5  # Увеличиваем сторону следующего квадрата

done()

########################## 11. Сумма чисел с условием ##############################
# Напишите программу, которая запрашивает у пользователя числа до тех пор,
# пока не будет введён 0. Затем программа выводит сумму всех введённых чисел.
# Пример ввода:
# 3 7 2 0
# Пример вывода:
# 12

# Инициализируем переменную для хранения суммы
total_sum = 0

while True:
    # Запрашиваем ввод числа у пользователя
    number = int(input("Введите число (или 0 для завершения): "))

    # Проверяем, введен ли 0
    if number == 0:
        break

    # Добавляем введённое число к сумме
    total_sum += number

# Выводим итоговую сумму
print(total_sum)

############################### 12. Количество делителей #########################
# Напишите программу, которая запрашивает у пользователя число n и выводит
# количество его делителей (не считая 1 и само число).
# Пример ввода:
# 12
# Пример вывода:
# 4

# Запрашиваем ввод числа n у пользователя
n = int(input("Введите число n: "))

# Инициализируем счётчик делителей
divisor_count = 0

# Перебираем числа от 2 до n-1
for i in range(2, n):
    if n % i == 0:
        divisor_count += 1

# Выводим количество делителей
print(divisor_count)














