# -----------------------------------------
# Напишите функцию, которая принимает два числа и возвращает
# их сумму, разность, произведение и частное.

def arithmetic_operations(a, b):
    # Проверка на деление на ноль
    if b == 0:
        print("Ошибка: деление на ноль невозможно")
        return None

    # Вычисление суммы
    sum_result = a + b

    # Вычисление разности
    difference_result = a - b

    # Вычисление произведения
    product_result = a * b

    # Вычисление частного
    quotient_result = a / b

    # Возвращение результатов
    return sum_result, difference_result, product_result, quotient_result


a = 10
b = 5
results = arithmetic_operations(a, b)
if results:
    print("Сумма: " + str(results[0]))
    print("Разность: " + str(results[1]))
    print("Произведение: " + str(results[2]))
    print("Частное: " + str(results[3]))

# -------------------------------------------------------
# Создайте функцию, которая проверяет, является ли число четным или нечетным.
# Выведите соответствующее сообщение.

def is_even_or_odd(number):
    if number % 2 == 0:
        print("Число четное.")
    else:
        print("Число нечетное.")


is_even_or_odd(10)
is_even_or_odd(7)

# ---------------------------------------------------
# Напишите функцию, которая принимает список чисел и возвращает новый список,
# содержащий только уникальные элементы.

def unique_elements(numbers):
    return list(set(numbers))
    # Преобразует входной список numbers в множество (set), которое автоматически удаляет дубликаты.
    # Затем преобразует это множество обратно в список и возвращает результат.

input_list = [1, 2, 2, 3, 4, 4]
output_list = unique_elements(input_list)
print(output_list)

# ---------------------------------------------------
# Напишите функцию, которая принимает список чисел
# и возвращает сумму всех положительных чисел.

def sum_positive_numbers(numbers):
    return sum(x for x in numbers if x > 0)
    # Применяет встроенную функцию sum, чтобы вычислить сумму отфильтрованных значений.

input_list = [1, -2, 3, -4, 5]
result = sum_positive_numbers(input_list)
print(result)

# -----------------------------------------------------
# Напишите рекурсивную функцию, которая выводит все числа от n до 1.

def countdown(n):
    if n == 0:
        return
    print(n)
    countdown(n - 1)
    # Функция countdown принимает один аргумент — число n.
    # Проверяется условие выхода из рекурсии: если n равно 0, функция просто возвращается, ничего не делая.
    # Если n больше нуля, она сначала печатает текущее значение n.
    # Затем вызывает саму себя с аргументом n - 1, что уменьшает счетчик на единицу и продолжает процесс до тех пор, пока не достигнет 0.

countdown(5)


# -----------------------------------------------------
# Напишите рекурсивную функцию, которая вычисляет сумму всех цифр
# в заданном целом числе.

def sum_of_digits(n):
    if n == 0:
        return 0
    return n % 10 + sum_of_digits(n // 10)
    # Функция извлекает последнюю цифру числа (n % 10),
    # добавляет её к результату рекурсивного вызова для оставшихся цифр (n // 10).

print(sum_of_digits(12345))


# --------------------------------------------------------
# Напишите рекурсивную функцию, которая возвращает строку в обратном порядке.

def reverse_string(s):
    if len(s) == 0:
        return s
    return reverse_string(s[1:]) + s[0]
    # Функция вызывает саму себя с подстрокой, начиная со второго символа (s[1:]),
    # и добавляет первый символ строки (s[0]) в конец.

print(reverse_string("Привет"))
